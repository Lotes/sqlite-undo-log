#ifndef SETUP_H
#define SETUP_H
#include "shared.hsql"
#include "controls.hsql"

#define __GET_CURRENT_ACTION_ID SELECT value FROM __TABLE_PREFIX(controls) WHERE name = __CURRENT_ACTION_ID LIMIT 1

#define __GET_CURRENT_CHANGE_ID SELECT value FROM __TABLE_PREFIX(controls) WHERE name = __CURRENT_CHANGE_ID LIMIT 1

#define __GET_CATEGORY_ID(category_name) SELECT id FROM __TABLE_PREFIX(categories) WHERE name = #category_name LIMIT 1

#define __GET_TABLE_ID(table) SELECT id FROM __TABLE_PREFIX(tables) WHERE name=#table LIMIT 1

#define __GET_COLUMN_ID(table, column) SELECT id FROM __TABLE_PREFIX(columns) WHERE name=#column AND table_id = (__GET_TABLE_ID(table)) LIMIT 1

#define __INCREMENT_CHANGE_ID UPDATE __TABLE_PREFIX(controls) SET value=value+1 WHERE name=__CURRENT_CHANGE_ID;

#define __SETUP_UNDO_LOG(table)\
INSERT INTO __TABLE_PREFIX(tables) (name) VALUES (#table);__NL\
INSERT INTO __TABLE_PREFIX(columns) (name, table_id) SELECT name, (__GET_TABLE_ID(table)) FROM pragma_table_info(#table);__NL\
CREATE TRIGGER table##_on_insert_trigger __NL\
  AFTER INSERT ON table __NL\
  FOR EACH ROW __NL\
BEGIN __NL\
  INSERT INTO __TABLE_PREFIX(changes) (id, type, row_id, action_id) VALUES (__GET_CURRENT_CHANGE_ID, "INSERT", NEW.rowid, __GET_CURRENT_ACTION_ID);__NL\
  INSERT INTO __TABLE_PREFIX(values) (change_id, column_id, old_value, new_value) SELECT (__GET_CURRENT_CHANGE_ID), (__GET_COLUMN_ID(table, name)), NULL, NULL  FROM pragma_table_info(#table);__NL\
  __INCREMENT_CHANGE_ID;__NL\
END

#define NOW strftime('%Y-%m-%d %H-%M-%S','now')

#define __BEGIN_ACTION(category_name)\
--beginning of an action #category_name __NL\
BEGIN TRANSACTION;__NL\
DELETE FROM __TABLE_PREFIX(controls);__NL\
INSERT OR IGNORE INTO __TABLE_PREFIX(categories) (name) VALUES (#category_name);__NL\
INSERT INTO __TABLE_PREFIX(actions) (category_id, created_at) SELECT (__GET_CATEGORY_ID(category_name)), NOW;__NL\
INSERT INTO __TABLE_PREFIX(controls) (name, value) VALUES (__CURRENT_ACTION_ID, last_insert_rowid()), (__CURRENT_CHANGE_ID, 0);

#define __END_ACTION DELETE FROM __TABLE_PREFIX(controls);__NL\
COMMIT TRANSACTION;__NL\
--end of the action

#endif